<template>
    <view class="container">
        <view class="outgo" wx:if="{{ type === 'outgo' }}">
            <scroll-view class="type-list" @tap="selectType" srcoll-y>
                <view class="item {{ index == curTypeIndex ? 'active' : '' }}" wx:for="{{ typeList }}" wx:key="id" data-index="{{ index }}">{{ item.name }}</view>
            </scroll-view>
            <scroll-view class="subtype-list" scroll-y>
                <view class="item" wx:for="{{ subtype }}" wx:key="id" @tap="selectItem({{ item.id }})">{{ item.name }}</view>
            </scroll-view>
        </view>

        <view class="income" wx:else>
            <scroll-view class="type-list" scroll-y>
                <view class="item" wx:for="{{ typeList }}" wx:key="id" @tap="selectItem({{ item.id }})">{{ item.name }}</view>
            </scroll-view>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import { getCategoryList } from './utils/data';
import global from '../globalService';
import mixin from './mixins';

export default class Index extends wepy.page {
    data = {
        incomeList: [],
        outgoList: [],
        curTypeIndex: 0, // 当前选中type的id
        type: '',
        typeObj: {},
        typeList: [],
        subtype: [],
    };
    config = {};
    components = {};
    mixins = [mixin];
    async onLoad(options) {
        const { type = 'outgo' } = options;

        try {
            this.typeList = await getCategoryList(type);
            this.type = type;
            this.typeObj = this.typeList[this.curTypeIndex];
            this.$apply();
        } catch (e) {
            this.handleError(e);
        }
    }

    // TODO: watch可以作为一个点来说
    watch = {
        typeObj(v) {
            this.subtype = v.subtype || [];
        },
    };

    methods = {
        /**
         * 选择大类
         */
        selectType(e) {
            const { index } = e.target.dataset;
            this.curTypeIndex = index;
            this.typeObj = this.typeList[index];
        },
        /**
         * 选择子类
         */
        selectItem(id) {
            let toFilterList = []; // 要被筛选的列表

            if (this.type === 'outgo') {
                toFilterList = this.subtype;
            } else {
                toFilterList = this.typeList;
            }

            const item = toFilterList.find((v) => +v.id === +id) || {};
            global.setCategory(item);
            wx.navigateBack();
        },
    };
}
</script>

<style lang="scss">
@import '../mixin.scss';

$itemHeight: 100rpx;

// 高度占满
.container {
    height: 100%;

    .outgo {
        height: 100%;

        .type-list {
            height: 100%;
        }
        .subtype-list {
            height: 100%;
        }
    }
}

.outgo {
    display: flex;

    .type-list {
        width: 180rpx;
        display: flex;
        flex-direction: column;

        .item {
            height: $itemHeight;
            line-height: $itemHeight;
            text-align: center;

            &.active {
                background-color: #fff;
                position: relative;

                &::after {
                    display: block;
                    content: '';
                    position: absolute;
                    width: 8rpx;
                    height: $itemHeight;
                    top: 0;
                    left: 0;
                    background-color: $selectColor;
                }
            }
        }
    }

    .subtype-list {
        flex: 1;
        background-color: #fff;
        padding-left: 30rpx;
        display: flex;
        flex-direction: column;

        .item {
            border-bottom: $border;
            height: $itemHeight;
            line-height: $itemHeight;
        }
    }
}

.income {
    .type-list {
        padding-left: 30rpx;

        .item {
            height: $itemHeight;
            line-height: $itemHeight;
            border-bottom: $border;
        }
    }
}
</style>