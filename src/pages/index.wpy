<template>
    <view class="container">
        <view class="header-container">
            <view class="box">
                <view class="value">￥{{ totalIncome }}</view>
                <view class="title">总收入</view>
            </view>
            <view class="box">
                <view class="value">￥{{ totalOutgo }}</view>
                <view class="title">总支出</view>
            </view>
        </view>

        <view class="bill" wx:if="{{ bills.length }}">
            <!-- 月 -->
            <view class="month-item {{ index + 1 === bills.length ? 'last' : '' }}" wx:for="{{ bills }}" wx:for-item="monthItem" wx:key="value">
                <view class="month-amount">
                    <view class="date">
                        <text class="first bold">{{ monthItem.month }}月</text>
                        <text>{{ monthItem.year }}</text>
                    </view>
                    <view class="money">
                        <text class="first">收:￥{{ monthItem.totalIncome }}</text>
                        <text>支:￥{{ monthItem.totalOutgo }}</text>
                    </view>
                </view>

                <!-- 天 -->
                <view class="day-list">
                    <view class="day-item" wx:for="{{ monthItem.items }}" wx:for-item="dayItem" wx:key="value">
                        <view class="day-amount">
                            <view class="date">
                                <text class="first">{{ dayItem.day }}</text>
                                <text>{{ weekDict[dayItem.week] }}</text>
                            </view>
                            <view class="money">
                                <text class="first">收:￥{{ dayItem.totalIncome }}</text>
                                <text>支:￥{{ dayItem.totalOutgo }}</text>
                            </view>
                        </view>

                        <!-- 单条项目 -->
                        <view class="single-list">
                            <block wx:for="{{ dayItem.items }}" wx:key="id">
                                <navigator class="single-item {{ item.type }} {{ index + 1 === dayItem.items.length ? 'last' : '' }}"
                                            @longpress="activeMultiChoose"
                                            url="/pages/edit?id={{item.id}}">
                                    <view class="info">
                                        <text class="">{{ item.category }}</text>
                                        <text class="time">{{ item.formatTime }}</text>
                                    </view>
                                    <view class="value">￥{{ item.money }}</view>
                                    <view class="mask {{ selectedIdsObj[item.id] ? 'selected' : '' }}" @tap.stop="selectItem({{ item.id }})" wx:if="{{ isEditing }}"></view>
                                </navigator>
                            </block>
                        </view>

                    </view>
                    <!-- day-end -->
                </view>

            </view>
            <!-- month-end -->
        </view>
        <view class="box-empty" wx:elif="{{ !isLoading }}">
            你还没有账单哦，赶快点击下方按钮记一笔吧
        </view>

        <view class="btn-list">
            <block wx:if="{{ isEditing }}">
                <button type="warn" @tap="deleteItems">删除</button>
                <button type="default" @tap="cancelEdit">取消</button>
            </block>
            <button type="primary" @tap="addbill" wx:else>记一笔</button>
        </view>
    </view>
</template>

<script>
import wepy from 'wepy';
import mixin from './mixins';
import { get, post } from '../http';
import global from '../globalService';
import { wechat } from './utils';

export default class Index extends wepy.page {
    data = {
        totalIncome: '0',
        totalOutgo: '0',
        bills: [],
        isLoading: true,
        weekDict: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
        isEditing: false,
        selectedIdsObj: {}, // 以对象的方式保存选中了哪些
    };
    config = {
        backgroundColor: '#EEEEEE',
    };
    components = {};
    mixins = [mixin];
    async onLoad() {
        await this.loadData();
    }

    async loadData() {
        try {
            const { bills, totalIncome, totalOutgo } = await get('/bill');
            this.bills = bills;
            this.totalIncome = totalIncome;
            this.totalOutgo = totalOutgo;
            this.isLoading = false;
            this.$apply();
        } catch (err) {
            this.handleError(err);
        }
    }

    async onShow() {
        // 更新了账单数据，需要重新加载数据
        if (global.get('billUpdated')) {
            global.set('billUpdated', false);
            await this.loadData();
        }
    }

    methods = {
        async addbill() {
            wx.navigateTo({
                url: '/pages/edit',
            });
        },

        activeMultiChoose() {
            this.isEditing = true;
            this.selectedIdsObj = {};
            this.$apply();
        },

        selectItem(id) {
            if (this.selectedIdsObj[id]) {
                delete this.selectedIdsObj[id];
            } else {
                this.selectedIdsObj[id] = true;
            }
        },

        async deleteItems() {
            try {
                const ids = Object.keys(this.selectedIdsObj); // 不放到computed里，只有在真正需要时才转成数组

                if (!ids.length) {
                    await wechat.showModal({
                        content: '请选择账单!',
                    });
                    return false;
                }

                const { confirm } = await wechat.showModal({
                    content: '确认删除选中的账单?（无法撤回）',
                });

                if (!confirm) {
                    return false;
                }

                const result = await post('/bill/deleteMany', {
                    ids,
                });

                console.log(result);

                this.selectedIdsObj = {};
                this.isEditing = false;
                this.$apply();

                this.loadData();
                return result;
            } catch (err) {
                this.handleError(err);
                return false;
            }
        },

        cancelEdit() {
            this.isEditing = false;
            this.$apply();
        },
    };
}
</script>

<style lang="scss">
@import '../mixin.scss';

$space: 30rpx; // 账单列表默认间距
$lightColor: #afafaf; // 浅色字色
$amountFontSize: 26rpx;
$amountMarginRight: 15rpx; // amount里，文字的间距

// 工具样式，用于继承
@mixin flex-between {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.header-container {
    width: 100%;
    height: 140rpx;
    display: flex;
    background-color: #ffffff;
    border-bottom: 1rpx solid #cccccc;
    // box-shadow: 3rpx 3rpx 5rpx #888;

    .box {
        flex: auto;

        display: flex;
        flex-direction: column;
        justify-content: center;

        .title,
        .value {
            text-align: center;
        }

        .value {
            font-weight: 600;
            font-size: 36rpx;
        }

        .title {
            font-size: 24rpx;
            color: #ccc;
        }
    }
}

.bill {
    margin-top: 50rpx;
    margin-bottom: 100rpx;

    .month-item {
        margin-top: 20rpx;
    }

    text.bold {
        color: #666666;
    }

    .date .first {
        display: inline-block;
        width: 2 * $amountFontSize + 10rpx;
        text-align: right;
        margin-right: $amountMarginRight;
    }

    .money .first {
        margin-right: $amountMarginRight;
    }

    .month-amount {
        @include flex-between;
        color: $lightColor;
        font-size: $amountFontSize;
        padding: 0 $space;
        margin-bottom: $amountMarginRight;
    }
    .day-amount {
        @include flex-between;
        color: $lightColor;
        font-size: $amountFontSize;
        padding: 0 $space;
    }

    .day-list {
        border-top: $border;
        border-bottom: $border;
        background-color: #fff;

        .day-item {
            padding-top: 10rpx;
            border-bottom: $border;
            .single-list {
                padding-left: $space;

                .single-item {
                    @include flex-between;
                    align-items: center;
                    border-bottom: $border;
                    font-size: 32rpx;
                    padding: 20rpx $space 20rpx 0rpx;
                    margin-left: 2 * $amountFontSize + $amountMarginRight;
                    position: relative;

                    .info {
                        display: flex;
                        flex-direction: column;

                        .time {
                            color: $lightColor;
                            font-size: 28rpx;
                        }
                    }

                    .mask {
                        position: absolute;
                        width: 100%;
                        height: 100%;
                        background-image: url('/unchecked.png');
                        background-repeat: no-repeat;
                        background-size: 30rpx;
                        background-position:top 10rpx right 30rpx;
                    }
                    .mask.selected {
                        background-image: url('/checked.png');
                    }
                }

                .single-item.outgo .value {
                    // 支出
                    color: $outgoColor;
                }

                .single-item.income .value {
                    // 收入
                    color: $incomeColor;
                }
            }
        }
    }
}

.login-button {
    margin-top: 200rpx;
}

.btn-list {
    display: flex;
    position: fixed;
    bottom: 0;
    right: 0;
    left: 0;

    button {
        flex: 1;
    }
}

.box-empty {
    color: #999999;
    padding-top: 300rpx;
    text-align: center;
    font-size: 30rpx;
}
</style>