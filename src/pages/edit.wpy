<template>
    <view class="container">
        <form @submit="save">
            <view class="tab">
                <view class="item {{ tabId === 0 ? 'active' : ''}}" @tap="switchTab(0)">支出</view>
                <view class="item {{ tabId === 1 ? 'active' : ''}}" @tap="switchTab(1)">收入</view>
            </view>

            <view class="detail">
                <view class="item">
                    <view class="name">金额</view>
                    <input class="input-item" placeholder-class="input-holder" name="money" type="digit" maxlength="15" value="{{ money || '' }}" @blur="inputHandle('money')" placeholder="请输入" />
                </view>
                <view class="item">
                    <view class="name">类别</view>
                    <view class="input-item {{ category ? '' : 'input-holder' }}" @tap="selectCategory({{ tabId }})">{{ category || '请选择' }}</view>
                    <input class="input-hide" name="category" type="text" value="{{ category }}" placeholder="" />
                </view>
                <view class="item last">
                    <view class="name">时间</view>
                    <input class="input-hide" name="time" type="text" value="{{ date }} {{ time }}" placeholder="" />
                    <picker class="date" mode="date" value="{{ date }}" @change="pickHandle('date')">
                        {{ date }}
                    </picker>
                    <picker mode="time" value="{{ time }}" @change="pickHandle('time')">
                        {{ time }}
                    </picker>
                </view>
            </view>

            <view class="comment">
                <input name="comment" type="text" value="{{ comment }}" @blur="inputHandle('comment')" placeholder="备注" />
            </view>

            <view class="btn-list">
                <button type="warn" @tap="delete">删除</button>
                <button type="primary" form-type="submit" disabled="{{ !canSubmit }}">保存</button>
            </view>
        </form>
    </view>
</template>

<script>
import wepy from 'wepy';
import {
    getCurrentTime,
    getCurrentDate,
    wechat,
} from './utils';
import global from '../globalService';
import { post } from '../http';
import mixin from './mixins';

const typeList = ['outgo', 'income'];

export default class Index extends wepy.page {
    data = {
        id: '',
        tabId: 0,
        time: '',
        date: '',
        category: null, // 类别
        categoryId: null, // 类别id
        money: 0,
        comment: '',
        canSubmit: false, // 是否能提交
    };
    config = {};
    components = {};
    mixins = [mixin];
    async onLoad(options) {
        const { id } = options;
        if (id) {
            this.id = id;

            const {
                type,
                money,
                category,
                category_id: cateogryId,
                time: dataTime,
                comment,
            } = options;

            const [, date, time] = dataTime.match(/([0-9]{4}-[0-9]{2}-[0-9]{2}) ([0-9]{2}:[0-9]{2})/);

            // TODO: 如何优化？只能Object.assign？
            this.tabId = type === 'outgo' ? 0 : 1;
            this.money = money;
            this.category = category;
            this.categoryId = cateogryId;
            this.date = date;
            this.time = time;
            this.comment = comment;
            this.$apply();
        } else {
            this.date = getCurrentDate();
            this.time = getCurrentTime();
            this.$apply();
        }
    }

    onShow() {
        const category = global.get('category');

        if (category) {
            this.category = category.name;
            this.categoryId = category.id;
        }
    }

    async save(e) {
        try {
            const { value: data } = e.detail;
            const { categoryId, tabId, id } = this;

            await post('/bill/save', Object.assign(data, {
                id,
                categoryId,
                type: typeList[tabId],
            }));

            this.editComplete();
        } catch (err) {
            this.handleError(err);
        }
    }

    editComplete() {
        global.emit('completeSaveBill');
        wx.navigateBack();
    }

    async delete() {
        try {
            const { confirm } = await wechat.showModal({
                title: '注意',
                content: '是否删除该条数据？',
            });

            if (!confirm) {
                return;
            }

            const { id } = this;

            await post('/bill/delete', {
                id,
            });

            this.editComplete();
        } catch (err) {
            this.handleError(err);
        }
    }

    // TODO: 计算属性可以作为一个点来说
    computed = {
        money() {
            const v = this.money;

            if (+v) {
                return (+v).toFixed(2);
            }

            return v;
        },

        canSubmit() {
            return !!(this.money && this.category && this.time);
        },
    };

    methods = {
        switchTab(id) {
            this.category = '';
            this.tabId = +id;

            global.set('category', '');
        },
        pickHandle(propName, e) {
            const { value } = e.detail;
            this[propName] = value;
        },
        selectCategory(tabId) {
            const url = `/pages/category?type=${typeList[tabId]}`;
            wx.navigateTo({
                url,
            });
        },
        // TODO: 对输入框的事件作统一处理，看这个能不能说
        inputHandle(propName, e) {
            const { value } = e.detail;
            this[propName] = value;
        },
    };
}
</script>

<style lang="scss">
@import '../mixin.scss';

$topSpace: 80rpx; // 单元格之间的间距
$twoSideSpace: 50rpx; // 两边间距

.tab {
    display: flex;
    flex-direction: row;
    background-color: #fff;
    border-bottom: $border;
    height: $itemHeight;

    .item {
        flex: auto;
        text-align: center;
        line-height: $itemHeight;
    }

    .active {
        color: $selectColor;
        position: relative;

        &::after {
            display: block;
            content: '';
            width: 120rpx;
            height: 5rpx;
            position: absolute;
            bottom: 0;
            left: calc(50% - 60rpx);
            background-color: $selectColor;
        }
    }
}

.detail {
    margin-top: $topSpace;
    background-color: #fff;
    border-top: $border;
    border-bottom: $border;

    .item {
        display: flex;
        flex-direction: row;
        align-items: center;
        height: $itemHeight;
        margin-left: $twoSideSpace;
        padding-right: $twoSideSpace;
        border-bottom: $border;

        .name {
            margin-right: 100rpx;
            height: 100%;
            line-height: $itemHeight;
        }
        .input-item {
            flex: 1;
            height: 100%;
            line-height: $itemHeight;
        }
        picker {
            height: 100%;
            line-height: $itemHeight;
        }
        picker.date {
            margin-right: 30rpx;
        }
    }
}

.comment {
    height: $itemHeight;
    background-color: #fff;
    border-top: $border;
    border-bottom: $border;
    margin-top: $topSpace;
    padding: 0 $twoSideSpace;

    input {
        height: 100%;
    }
}

.btn-list {
    display: flex;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;

    button {
        flex: 1;
    }
}

.input-holder {
    color: $holderColor !important;
}
.input-hide {
    display: none;
}
</style>